#interviewPage img, #interviewEntry img {
  display: block;
  max-width: 100%; }

#interviewPage button, #interviewEntry button {
  outline: none; }

#interviewPage .targetLink, #interviewEntry .targetLink {
  position: relative;
  z-index: 0; }
  #interviewPage .targetLink .goLink, #interviewEntry .targetLink .goLink {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    z-index: 5; }

#interviewPage .ele-hover, #interviewEntry .ele-hover {
  opacity: 1;
  transition: all 0.3s ease; }
  #interviewPage .ele-hover:hover, #interviewEntry .ele-hover:hover {
    opacity: 0.8; }

#interviewPage .style-h3, #interviewEntry .style-h3 {
  color: #1eb9ee;
  font-size: 2.4rem;
  font-weight: bold;
  letter-spacing: 0.1rem; }
  @media screen and (max-width: 768px) {
    #interviewPage .style-h3, #interviewEntry .style-h3 {
      font-size: 1.8rem; } }

#interviewPage .font36b, #interviewEntry .font36b {
  font-size: 3.6rem;
  font-weight: bold;
  letter-spacing: 0.15rem; }
  @media screen and (max-width: 768px) {
    #interviewPage .font36b, #interviewEntry .font36b {
      font-size: 2.4rem; } }

#interviewPage .font28b, #interviewEntry .font28b {
  font-size: 2.8rem;
  font-weight: bold;
  letter-spacing: 0.1rem; }
  @media screen and (max-width: 768px) {
    #interviewPage .font28b, #interviewEntry .font28b {
      font-size: 2rem; } }

#interviewPage .fontW, #interviewEntry .fontW {
  font-weight: bold; }

#interviewPage .w-h-100, #interviewEntry .w-h-100 {
  width: 100%;
  height: 100%; }

#interviewPage .w-100, #interviewEntry .w-100 {
  width: 100%; }

#interviewPage .h-100, #interviewEntry .h-100 {
  height: 100%; }

#interviewPage .w-100v, #interviewEntry .w-100v {
  width: 100vw; }

#interviewPage .h-100v, #interviewEntry .h-100v {
  height: 100vh; }

#interviewPage .wmax, #interviewEntry .wmax {
  max-width: 100%; }

@media screen and (max-width: 768px) {
  #interviewPage > .container {
    max-width: 600px; } }

#interviewPage .person {
  margin-top: 100px;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  margin-bottom: 60px; }
  @media screen and (max-width: 768px) {
    #interviewPage .person {
      flex-direction: column;
      margin-top: 40px;
      margin-bottom: 20px; } }
  #interviewPage .person-per {
    max-width: calc(50% - 10px);
    width: 100%;
    margin-bottom: 60px; }
    @media screen and (max-width: 768px) {
      #interviewPage .person-per {
        max-width: 100%;
        margin-bottom: 40px; } }
    #interviewPage .person-per figure {
      max-width: 500px;
      width: 100%;
      margin: 0px auto;
      background-color: #efefef; }
      #interviewPage .person-per figure img {
        width: 100%; }
  #interviewPage .person-infor {
    margin: 50px auto 0px;
    max-width: 460px;
    padding: 0px 20px 40px; }
    @media screen and (max-width: 768px) {
      #interviewPage .person-infor {
        margin: 30px auto 0px;
        padding: 0px 20px 20px; } }
    #interviewPage .person-infor > * {
      letter-spacing: 0.1rem;
      font-weight: bold; }
    #interviewPage .person-infor span {
      display: inline-block; }
    #interviewPage .person-infor .nihongo {
      margin-right: 15px; }
    #interviewPage .person-infor .eigo {
      color: #999999;
      line-height: 1.6; }
    #interviewPage .person-infor .text-under {
      color: #1eb9ee;
      margin-top: 10px;
      line-height: 1.4; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
